steady_state_model;

    pi = log( Pi_bar );
    psi = 1;
    logit_delta = logit_deltaSS;
    nu = nubar;
    q = 0;
    R_ = Pi_bar / betta;
    r = log( R_ );
    lambdaD_ = 0;
    lambdaB_ = gam*(1-(1-gam)*(1-Theta));
    SZ7 = lambdaB_;
    SZ6 = lambdaB_ + (1-gam)*SZ7*(1-(1-gam)*(1-Theta))/( (1-(1-gam)*(1-Theta))-lambdaB_ );
    SZ5 = lambdaB_ + (1-gam)*SZ6*(1-(1-gam)*(1-Theta))/( (1-(1-gam)*(1-Theta))-lambdaB_ );
    SZ4 = lambdaB_ + (1-gam)*SZ5*(1-(1-gam)*(1-Theta))/( (1-(1-gam)*(1-Theta))-lambdaB_ );
    SZ3 = lambdaB_ + (1-gam)*SZ4*(1-(1-gam)*(1-Theta))/( (1-(1-gam)*(1-Theta))-lambdaB_ );
    SZ2 = lambdaB_ + (1-gam)*SZ3*(1-(1-gam)*(1-Theta))/( (1-(1-gam)*(1-Theta))-lambdaB_ );
    SZ1 = lambdaB_ + (1-gam)*SZ2*(1-(1-gam)*(1-Theta))/( (1-(1-gam)*(1-Theta))-lambdaB_ );
    @#for lag in [1:7]
    prodR@{lag} = R_^@{lag};
    MD@{lag}_ = SZ@{lag}*R_^@{lag}*( (1-gam)*(1-Theta) )/( (1-(1-gam)*(1-Theta)) - lambdaB_ );
    mD@{lag}_ = ( MD@{lag}_ + (1-gam)*(1-Theta)*R_^@{lag} )/( 1 - (1-gam)*(1-Theta) );
    @#endfor
    kappa = (1-gam)*(betta/Pi_bar)*MD1_/(1+(1-gam)*(betta/Pi_bar)*MD1_);
    MV_ = ( 1 - gam*(1-kappa)*(1-(1-gam)*(1-Theta)) )/(1-gam);
    mv = log( MV_ );
    mV_ = MV_ / ( 1 - (1-gam)*(1-Theta) ) - (1-kappa);
    RK_ = 1/((1-gam)*(betta/Pi_bar)*MV_);
    Z_ = RK_/Pi_bar-1+deltaSS;
    X1_by_X2 = ( (1 - xi*Pi_bar^(zzeta-1))/(1-xi) )^(1/(1-zzeta));
    Disp_ = ( (1-xi)*X1_by_X2^(-zzeta) )/(1-xi*Pi_bar^zzeta);
    disp = log( Disp_ );
    Xi_ = (1-gam)*betta*MV_; 
    MC_ =  X1_by_X2*((zzeta-1)/zzeta)*(1-xi*Xi_*Pi_bar^zzeta)/(1- xi*Xi_*Pi_bar^(zzeta-1));
    mc = log( MC_ );
    a = log( Ass );
    g = log( GSS );
    K_over_YW = MC_*alp/Z_;
    I_over_YW = deltaSS * K_over_YW;
    C_over_YW = 1/Disp_ - gySS/Disp_ - I_over_YW;
    H = H_bar;
    H_ = H;
    YW_ = ( Ass * H_ ) * K_over_YW ^ ( alp / ( 1 - alp ) );
    Y_ = YW_/Disp_;
    K_ = K_over_YW * YW_;
    k = log( K_ );
    inv = log(deltaSS) + k;
    c = log( C_over_YW * YW_ );
    sum_mD = mD1_/Pi_bar + mD2_/Pi_bar^2 + mD3_/Pi_bar^3 + mD4_/Pi_bar^4 + mD5_/Pi_bar^5 + mD6_/Pi_bar^6 + mD7_/Pi_bar^7;
    sum_MD = MD1_/Pi_bar + MD2_/Pi_bar^2 + MD3_/Pi_bar^3 + MD4_/Pi_bar^4 + MD5_/Pi_bar^5 + MD6_/Pi_bar^6 + MD7_/Pi_bar^7;
    AUXBD = sum_mD/(1+mV_*(R_/Pi_bar)/(1-kappa));
    AUXBS = (mV_*(RK_/Pi_bar)/(1-kappa))/(1+mV_*(R_/Pi_bar)/(1-kappa));
    AUXED = (1/nubar)*( log( 1 - kappa/kappa_new ) )*( ((MV_*(R_/Pi_bar)/(1-kappa))/(1+mV_*(R_/Pi_bar)/(1-kappa)))*sum_mD - sum_MD );
    AUXES = (1/nubar)*( log( 1 - kappa/kappa_new ) )*((MV_*(RK_/Pi_bar)/(1-kappa))/(1+mV_*(R_/Pi_bar)/(1-kappa)));
    D = K_*(RK_/Pi_bar - 1 - (R_/Pi_bar-1)*AUXBS - (1-kappa)*AUXES)/(1-(1-kappa)*AUXED + (R_/Pi_bar-1)*AUXBD);
    E_ = AUXED*D - AUXES*K_;
    B_ = AUXBD*D + AUXBS*K_;
    b = log( B_ );
    lagD1 = D/Pi_bar;
    lagD2 = lagD1/Pi_bar;
    lagD3 = lagD2/Pi_bar;
    lagD4 = lagD3/Pi_bar;
    lagD5 = lagD4/Pi_bar;
    lagD6 = lagD5/Pi_bar;
    lagD7 = lagD6/Pi_bar;
    X1 = (zzeta/(zzeta-1))*Y_*MC_ / (1 - xi*Xi_*Pi_bar^zzeta);
    X2 = Y_ / ( 1 - xi*Xi_*Pi_bar^(zzeta-1));
    spread = RK_ - R_;
    
    Y = Y_;
    I = exp(inv);
    C = exp(c);
    R = R_;
    K = K_;
    Q = 1;
    B = B_;
    E = E_;
end;
